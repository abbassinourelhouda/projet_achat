 stage('Sonarqube') { 
                steps { 
                  
                   sh '''
                  
                  cd ${springF} &&  mvn sonar:sonar \
                 -Dsonar.projectKey=achat_proj \
                 -Dsonar.projectName=achat_proj \
                 -Dsonar.host.url=http://192.168.1.78:9000 \
                 -Dsonar.login=cef4c391ef7d4eb31975f3b6de847a8184e57cb7

                     '''

                       }

            }
          
         // Déposer le livrable sur Nexus
          stage('Nexus') {

                 steps {
                    
                   script {
                   
                    nexusArtifactUploader artifacts: 
                    [
                    
                           [
                       artifactId: 'tpAchatProject',
                       classifier: '',
                       file: 'Achat_back/target/tpAchatProject-1.0.jar',
                       type: 'jar'
                      
                           ]
                      
                    ],
                   
                   pom: 'Achat_back/pom.xml', 
                   credentialsId: 'nexus_cred',
                   groupId: 'com.esprit.examen',
                   nexusUrl: '192.168.1.78:8081',
                   nexusVersion: 'nexus3',
                   protocol: 'http',
                   repository: 'achat_proj',
                   version: '1.0'

                   }

                 }
          }
          
          // Build de l’image (spring + angular) +   Déposer les deux images sur DockerHub
          stage("build and push back/front images"){
         
         
                 steps{

                    script {
            
             echo "====++++executing build and push back + front images++++===="
    
          withCredentials([usernamePassword(credentialsId: 'dockerhub_cred', passwordVariable: 'PASS', usernameVariable: 'USER')]){
         
                             sh "docker build -t $USER/achat_back ${springF}/"

                             sh "docker build -t $USER/achat_front ${angularF}/"

                             sh "echo $PASS | docker login -u $USER --password-stdin"

                             sh "docker push $USER/achat_back"

                             sh "docker push $USER/achat_front"
                         }
                 }
            }
         post{

             always{
                 sh "docker logout"
             }
        
             success{
                 echo "====++++push image execution success++++===="
             }
        
             failure{
                 echo "====++++push image execution failed++++===="
             }
    
            }

          }